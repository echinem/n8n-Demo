{
  "name": "Bonus (with name)",
  "nodes": [
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1ZtnvkrAqiYZKY5b4WvvWTOSfLT45K2PRnJkzY45k7Yg/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        220,
        -65
      ],
      "id": "ca1f829e-5353-4836-9855-3036a7878dd2",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Km0HeYvMgiRuvz4T",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "clearDeduplicationHistory",
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        440,
        -65
      ],
      "id": "bc090239-7edd-4dd6-84f1-bb31637f9fbe",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/customsearch/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "AIzaSyAy7qIcV4XIzgyqbpNUCGzOOMTUZwR5Hhw"
            },
            {
              "name": "cx",
              "value": "465fbac17ebe846f9"
            },
            {
              "name": "q",
              "value": "={{ $json.data[0].Name }} RFID company {{ $json.data[0].Industry }}  {{ $json.data[0].text }} full name"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1476,
        -140
      ],
      "id": "ba88805a-7d64-4e05-bb12-b16a471e8ed4",
      "name": "HTTP Request",
      "notesInFlow": true,
      "notes": "Google search the decision maker"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1696,
        -65
      ],
      "id": "8d4f2bae-15ab-4fbf-be0f-1b7098ec2aec",
      "name": "Merge",
      "notesInFlow": true,
      "notes": "Map google search to company"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1ZtnvkrAqiYZKY5b4WvvWTOSfLT45K2PRnJkzY45k7Yg/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Decision Maker": "={{ $json.decision_maker }}",
            "Name": "={{ $json.company_name }}"
          },
          "matchingColumns": [
            "Name"
          ],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Booth",
              "displayName": "Booth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Country",
              "displayName": "Country",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Company Size",
              "displayName": "Company Size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Industry",
              "displayName": "Industry",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "RFID Role",
              "displayName": "RFID Role",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Decision Maker",
              "displayName": "Decision Maker",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2732,
        -65
      ],
      "id": "6618f247-133c-45bb-a56c-9ff8e2a674da",
      "name": "Google Sheets1",
      "notesInFlow": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Km0HeYvMgiRuvz4T",
          "name": "Google Sheets account 2"
        }
      },
      "notes": "Add decision maker to sheet"
    },
    {
      "parameters": {
        "jsCode": "function chunkArray(arr, size) {\n  const chunks = [];\n  for (let i = 0; i < arr.length; i += size) {\n    chunks.push(arr.slice(i, i + size));\n  }\n  return chunks;\n}\n\n// Collect input data from all incoming items\nconst allItems = items.map(item => item.json);\n\n// Define chunk size\nconst chunkSize = 5;\n\n// Break data into chunks\nconst chunks = chunkArray(allItems, chunkSize);\n\n// Return each chunk as a single item\nreturn chunks.map(chunk => ({ json: { data: chunk } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1256,
        -140
      ],
      "id": "0d2b6e4f-78e4-4dd0-8475-d41c30af14e5",
      "name": "Code2",
      "notesInFlow": true,
      "notes": "Divide into chunks"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an information extraction system.\n\nInput: An array of JSON objects, each representing a company with fields:\n\nName\n\nDescription\n\nitems (an array of google search snippets related to the respective company)\n\nTask: For each given company item, examine all snippets in the items array. Extract exactly one full name of a decision maker only if the full name appears together with a valid role in the same snippet. \n\nValid roles (case-insensitive): CEO, CTO, Founder, Co-Founder, Managing Director, Managing Partner, President, Vice President, Technical Director, Head of Innovation, Head of R&D.\n\nIf none found, output \"Unknown\" for that company.\n\nOutput format:\n[\n  { \"company_name\":given input company, \"decision_maker\": your result for that company },\n  ...\n]\nOutput only what is mentioned. No explanations, no extra text.\n\nInput data:\n{{ $json.stringifiedObject }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2136,
        -65
      ],
      "id": "3c87be76-3c41-4ce9-acd7-0ba4ca0051b2",
      "name": "Basic LLM Chain1",
      "notesInFlow": true,
      "notes": "Get decision maker name from google search results"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2224,
        155
      ],
      "id": "68381adf-d5ba-4cf4-90e6-067bd7016086",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "q9pAeK9hHY9jis10",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const cleanedText = item.json.text\n    .replace(/```json\\s*/, '')\n    .replace(/```/, '')\n    .trim();\n\n  try {\n    const companies = JSON.parse(cleanedText);\n\n    for (const company of companies) {\n      results.push({\n        json: {\n          company_name: company.company_name,\n          decision_maker: company.decision_maker\n        }\n      });\n    }\n  } catch (e) {\n    // Skip this item if JSON is invalid\n    continue;\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2512,
        -65
      ],
      "id": "71c98f2f-919c-4412-9771-2084830fddb3",
      "name": "Code4",
      "notesInFlow": true,
      "notes": "Clean LLM output & get JSON"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        -65
      ],
      "id": "5f8072a2-bcd7-43cd-ad20-a64ecf884a9f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Given the company name and description, return the most likely job title of the decision maker responsible for adopting RFID technology. Only output the title. No extra explanation.\n\nCompany: {{ $json.Name }}\nDescription: {{ $json.Description }}\n\nAnswer:\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        660,
        60
      ],
      "id": "c5a4bf17-7c2c-49d8-9b47-ea2a048d0f79",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        748,
        280
      ],
      "id": "d7325a69-11d7-4e79-ba1d-6a0ceb6e4808",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "q9pAeK9hHY9jis10",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1036,
        -65
      ],
      "id": "162e6aaf-78ee-4ee3-aea7-a250ff190b57",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  return {\n    json: {\n      // This converts the full object into a string\n      stringifiedObject: JSON.stringify(item.json)\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        -60
      ],
      "id": "5a1924b8-1f8c-47f0-8a4e-5d61f10ed400",
      "name": "Code"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d276c413-a10b-4bbd-a02c-048eeabc1080",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fdc873c3624c460fc270aebc24c870a43443ba7811b1e50822aa1e58351e16c8"
  },
  "id": "YQlGnUpvwuWPh1X3",
  "tags": []
}